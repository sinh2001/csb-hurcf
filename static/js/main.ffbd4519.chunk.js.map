{"version":3,"sources":["User.js","index.js"],"names":["UserTable","props","showEditor","e","setState","edit","row","parseInt","target","dataset","cell","cellIndex","save","preventDefault","input","firstChild","console","log","data","state","slice","value","delete","id","splice","renderTable","headers","map","title","idx","onDoubleClick","rowidx","content","onSubmit","type","required","min","max","defaultValue","onClick","initialData","prevProps","this","React","Component","MyForm","handleSubmit","FormData","user","name","push","users","reset","htmlFor","renderForm","User","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ffbd4519.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"./03.00.table.css\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport class UserTable extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      data: this.props.initialData,\r\n      edit: this.props.edit\r\n    };\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    if (prevProps.initialData !== this.props.initialData) {\r\n      this.setState({ data: this.props.initialData });\r\n    }\r\n  }\r\n  showEditor = (e) => {\r\n    this.setState({\r\n      edit: {\r\n        row: parseInt(e.target.dataset.row, 10),\r\n        cell: e.target.cellIndex\r\n      }\r\n    });\r\n  };\r\n\r\n  save = (e) => {\r\n    e.preventDefault();\r\n    var input = e.target.firstChild;\r\n    console.log(input);\r\n    var data = this.state.data.slice();\r\n    data[this.state.edit.row][this.state.edit.cell] = input.value;\r\n    this.setState({\r\n      edit: null,\r\n      data: data\r\n    });\r\n  };\r\n\r\n  delete = (e) => {\r\n    e.preventDefault();\r\n    let id = e.target.dataset.row;\r\n    var data = this.state.data.slice();\r\n    data.splice(id, 1);\r\n    this.setState({\r\n      edit: null,\r\n      data: data\r\n    });\r\n  };\r\n\r\n  renderTable = () => {\r\n    // console.log(this.state.data);\r\n    return (\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            {this.props.headers.map(function (title, idx) {\r\n              return <th key={idx}>{title}</th>;\r\n            })}\r\n          </tr>\r\n        </thead>\r\n        <tbody onDoubleClick={this.showEditor}>\r\n          {this.state.data.map((row, rowidx) => {\r\n            // console.log(row);\r\n            return (\r\n              <tr key={rowidx}>\r\n                {row.map((cell, idx) => {\r\n                  var content = cell;\r\n                  var edit = this.state.edit;\r\n                  if (edit && edit.row === rowidx && edit.cell === idx) {\r\n                    if (edit.cell === 1) {\r\n                      content = (\r\n                        <form onSubmit={this.save}>\r\n                          <input\r\n                            type=\"number\"\r\n                            required\r\n                            min=\"0\"\r\n                            max=\"100\"\r\n                            defaultValue={cell}\r\n                          />\r\n                        </form>\r\n                      );\r\n                    } else if (edit.cell === 2) {\r\n                      content = (\r\n                        <form onSubmit={this.save}>\r\n                          {/* <input type=\"text\" defaultValue={cell} /> */}\r\n                          <select type=\"text\" defaultValue={cell}>\r\n                            <option value=\"Nam\">Nam</option>\r\n                            <option value=\"Nữ\">Nữ</option>\r\n                          </select>\r\n                          <button type=\"submit\">save</button>\r\n                        </form>\r\n                      );\r\n                    } else {\r\n                      content = (\r\n                        <form onSubmit={this.save}>\r\n                          <input type=\"text\" defaultValue={cell} required />\r\n                        </form>\r\n                      );\r\n                    }\r\n                  }\r\n                  return (\r\n                    <td key={idx} data-row={rowidx}>\r\n                      {content}\r\n                    </td>\r\n                  );\r\n                })}\r\n\r\n                <td>\r\n                  <button onClick={this.delete} data-row={rowidx}>\r\n                    xoá\r\n                  </button>\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return <div>{this.renderTable()}</div>;\r\n  }\r\n}\r\n\r\nUserTable.propTypes = {\r\n  headers: PropTypes.arrayOf(PropTypes.string),\r\n  initialData: PropTypes.arrayOf(\r\n    PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.string, PropTypes.number]))\r\n      .isRequired\r\n  ).isRequired\r\n};\r\n\r\nexport default UserTable;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"create-react-class\";\nimport UserTable from \"./User\";\n\nclass MyForm extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      users: [],\n      headers: this.props.headers\n    };\n  }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    let data = new FormData(e.target);\n    const user = [];\n    for (let [name, value] of data) {\n      console.log(name + \" \" + value);\n      user.push(value);\n    }\n    this.setState({\n      users: [...this.state.users, user]\n    });\n    e.target.reset();\n    console.log(e.target);\n  };\n\n  renderForm() {\n    return (\n      <form onSubmit={this.handleSubmit} id=\"myForm\">\n        <div>\n          <label htmlFor=\"username\">Họ Và Tên: &nbsp;</label>\n\n          <input id=\"username\" name=\"username\" type=\"text\" required />\n        </div>\n        <br />\n        <div>\n          <label htmlFor=\"birthdate\">Tuổi: &nbsp;</label>\n          <input\n            id=\"birthdate\"\n            name=\"birthdate\"\n            type=\"number\"\n            required\n            min=\"0\"\n          />\n        </div>\n        <div>\n          {\" \"}\n          <p>\n            giới tính: &nbsp;\n            <select name=\"gender\">\n              <option value=\"Nam\">Nam</option>\n              <option value=\"Nữ\">Nữ</option>\n            </select>\n          </p>\n        </div>\n\n        <button type=\"submit\">Thêm Mới</button>\n      </form>\n    );\n  }\n  render() {\n    return (\n      <div>\n        {this.renderForm()}\n        <UserTable\n          headers={this.state.headers}\n          initialData={this.state.users}\n        />\n      </div>\n    );\n  }\n}\n\nvar headers = [\"Tên\", \"Tuổi\", \"Giới tính\", \"thao tác\"];\nvar data = [\n  [\"sinh\", 20, \"nam\"],\n  [\"truonginh\", 20, \"nam\"],\n  [\"buitruongsinh\", 20, \"nam\"]\n];\n\nReactDOM.render(\n  <div>\n    <MyForm data={data} headers={headers} />\n  </div>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}